{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { userSlice } from '../Slice/UserSlice';\nexport const store = configureStore({\n  reducer: {\n    user: userSlice.reducer\n  }\n  // middleware: (getDefaultMiddleware) =>\n  //     getDefaultMiddleware()\n});\n// Infer the `RootState` and `AppDispatch` types from the store itself\n\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}","map":{"version":3,"names":["configureStore","userSlice","store","reducer","user"],"sources":["E:/DACNPM/21.5.2025/CK_CNPM_DoctorBooking_FE/src/Redux/Store/Store.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit'\r\nimport { userSlice } from '../Slice/UserSlice'\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        user: userSlice.reducer,\r\n    },\r\n    // middleware: (getDefaultMiddleware) =>\r\n    //     getDefaultMiddleware()\r\n})\r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\r\nexport type AppDispatch = typeof store.dispatch"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,SAAS,QAAQ,oBAAoB;AAE9C,OAAO,MAAMC,KAAK,GAAGF,cAAc,CAAC;EAChCG,OAAO,EAAE;IACLC,IAAI,EAAEH,SAAS,CAACE;EACpB;EACA;EACA;AACJ,CAAC,CAAC;AACF;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}