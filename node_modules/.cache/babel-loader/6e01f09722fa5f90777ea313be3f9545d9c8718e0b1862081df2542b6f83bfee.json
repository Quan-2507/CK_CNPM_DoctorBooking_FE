{"ast":null,"code":"// import React, {useContext, useEffect, useState} from \"react\";\n// import {useParams} from \"react-router-dom\";\n// import doctor from \"../Doctor/Doctor\";\n// import RelatedDoctors from \"./RelatedDoctors\";\n//\n// const AppointmentContainer = () => {\n//     const {docId} = useParams();\n//     const {doctors} = useContext(AppContext)\n//     const daysOfWeek = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRID', 'SAT'];\n//\n//     const [docInfo, setDocInfo] = useState(null);\n//     const [docSlots,setDocSlots] = useState([]);\n//     const [slotIndex,setSlotIndex] = useState(0);\n//     const [slotTime,setSlotTime] = useState('');\n//\n//     const fetchDocInfo = async () => {\n//        const docInfo = doctors.find((doctor) => doc._id === docId);\n//        setDocInfo(docInfo)\n//     }\n//\n//     const getAvailableSlots = async () =>{\n//         setDocSlots([]);\n//\n//         //getting current date\n//         let today = new Date();\n//\n//         for(let i = 0;i<7;i++){\n//             //getting date with index\n//             let currentDate = new Date(today);\n//             currentDate.setDate(today.getDate()+i);\n//\n//             //setting end time of the date with index\n//             let endTime = new Date();\n//             endTime.setDate(today.getDate()+1);\n//             endTime.setHours(21,0,0,0)\n//\n//             //setting hours\n//             if(today.getDate() === currentDate.getDate()){\n//                 currentDate.setHours(currentDate.getHours() > 10 ? currentDate.getHours() + 1 : 10);\n//                 currentDate.setMinutes(currentDate.getMinutes() > 30 ? 30 : 0);\n//             }else {\n//                 currentDate.setHours(10);\n//                 currentDate.setMinutes(0);\n//             }\n//\n//             let timeSlots = []\n//\n//             while(currentDate < endTime){\n//                 let formattedTime = currentDate.toLocaleTimeString([],{hour: '2-digit', minute: '2-digit'});\n//                 //ad slot to array\n//                 timeSlots.push({\n//                     datetime: new Date(currentDate),\n//                     time: formattedTime\n//                 })\n//\n//                 //Increment current time by 30 minutes\n//                 currentDate.setMinutes(currentDate.getMinutes()+30);\n//             }\n//\n//             setDocSlots(prev =>([...prev,timeSlots]))\n//         }\n//     }\n//\n//     useEffect(()=>{\n//         fetchDocInfo()\n//     },[doctors,docId])\n//\n//     useEffect(()=>{\n//         getAvailableSlots()\n//     },[docInfo])\n//\n//     useEffect(()=>{\n//         console.log(docSlots)\n//     },[docSlots])\n//\n//     return docInfo &&(\n//         <div>\n//             {/*-----Doctor Details----*/}\n//             <div className='flex flex-col sm:flex-row gap-4'>\n//             <div>\n//                 <img className='bg-primary w-full sm:max-w-72 rounded-lg' src={docInfo.image} alt=\"\"/>\n//             </div>\n//             <div className='flex-1 border border-gray-400 rounded-lg p-8 py-7 bg-white mx-2 sm:mx-0 mt-[-80px] sm:mt-0'>\n//                 {/*-----Doc Info: name, degree, experience-----*/}\n//                 <p className='flex items-center gap-2 text-2xl font-medium text-gray-900'>{doctor.name}\n//                     {docInfo.name}\n//                     <img className='w-5' src={assets.verified_icon} alt=\"\"/>\n//                 </p>\n//                 <div className='flex items-center gap-2 text-sm mt-1 text-gray-600'>\n//                     <p>{docInfo.degree} - {docInfo.speciality}</p>\n//                     <button className='py-0.5 px-2 border text-xs rounded-full'>{docInfo.experience}</button>\n//                 </div>\n//                 {/*----Doctor About----*/}\n//                 <div>\n//                     <p className='flex items-center gap-1 text-sm mt-1 font-medium text-gray-900 mt-3'>\n//                         About <img src={assets.info_icon} alt=\"\"/>\n//                     </p>\n//                     <p className='text-sm text-gray-500 max-w-[700px] mt-1'>{docInfo.about}</p>\n//                 </div>\n//                 <p className='text-gray-500 font-medium '>\n//                     Appointment fee:<span>50.000Ä‘</span>\n//                 </p>\n//             </div>\n//         </div>\n//             {/*------Booking slots-----*/}\n//             <div className='sm:ml-72 sm:pl-4 mt-4 font-medium text-gray-700'>\n//                 <p>Booking slots</p>\n//                 <div className='flex gap-3 items-center w-full overflow-x-scroll mt-4'>\n//                     {\n//                         docSlots.length && docSlots.map((item,index)=>(\n//                             <div onClick={()=> setSlotIndex(index)} className={`text-center py-6 min-w-16 rounded-full cursor-pointer ${slotIndex === index ? 'bg-primary text-white' : 'border border-gray-200'}`} key={index}>\n//                                 <p>{item[0] && daysOfWeek[item[0].datetime.getDay()]}</p>\n//                                 <p>{item[0] && item[0].datetime.getDate()}</p>\n//                             </div>\n//                         ))\n//                     }\n//                 </div>\n//                 <div className='flex items-center gap-3 w-full overflow-x-scroll mt-4'>\n//                     {docSlots.length && docSlots[slotIndex].map((item,index)=>(\n//                         <p onClick={()=>setSlotTime(item.time)} className={`text-sm font-light flex-shrink-0 px-5 py-2 rounded-full cursor-pointer ${item.time === slotTime ? 'bg-primary text-white' : 'text-gray-400 border border-gray-300'}`} key={index}>\n//                             {item.time.toLowerCase()}\n//                         </p>\n//                     ))}\n//                 </div>\n//                 <button className='bg-primary text-white text-sm font-light px-14 py-3 rounded-full my-6'>Book an appointment</button>\n//             </div>\n//\n//             {/*Listing Related Doctors*/}\n//             <RelatedDoctors docId={docId} speciality={docInfo.speciality}/>\n//\n//         </div>\n//     )\n// }\n// export default AppointmentContainer","map":{"version":3,"names":[],"sources":["C:/Users/hacsa/IdeaProjects/CK CNPM/clone fe/CK_CNPM_DoctorBooking_FE/src/Appointment/AppointmentContainer.js"],"sourcesContent":["// import React, {useContext, useEffect, useState} from \"react\";\r\n// import {useParams} from \"react-router-dom\";\r\n// import doctor from \"../Doctor/Doctor\";\r\n// import RelatedDoctors from \"./RelatedDoctors\";\r\n//\r\n// const AppointmentContainer = () => {\r\n//     const {docId} = useParams();\r\n//     const {doctors} = useContext(AppContext)\r\n//     const daysOfWeek = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRID', 'SAT'];\r\n//\r\n//     const [docInfo, setDocInfo] = useState(null);\r\n//     const [docSlots,setDocSlots] = useState([]);\r\n//     const [slotIndex,setSlotIndex] = useState(0);\r\n//     const [slotTime,setSlotTime] = useState('');\r\n//\r\n//     const fetchDocInfo = async () => {\r\n//        const docInfo = doctors.find((doctor) => doc._id === docId);\r\n//        setDocInfo(docInfo)\r\n//     }\r\n//\r\n//     const getAvailableSlots = async () =>{\r\n//         setDocSlots([]);\r\n//\r\n//         //getting current date\r\n//         let today = new Date();\r\n//\r\n//         for(let i = 0;i<7;i++){\r\n//             //getting date with index\r\n//             let currentDate = new Date(today);\r\n//             currentDate.setDate(today.getDate()+i);\r\n//\r\n//             //setting end time of the date with index\r\n//             let endTime = new Date();\r\n//             endTime.setDate(today.getDate()+1);\r\n//             endTime.setHours(21,0,0,0)\r\n//\r\n//             //setting hours\r\n//             if(today.getDate() === currentDate.getDate()){\r\n//                 currentDate.setHours(currentDate.getHours() > 10 ? currentDate.getHours() + 1 : 10);\r\n//                 currentDate.setMinutes(currentDate.getMinutes() > 30 ? 30 : 0);\r\n//             }else {\r\n//                 currentDate.setHours(10);\r\n//                 currentDate.setMinutes(0);\r\n//             }\r\n//\r\n//             let timeSlots = []\r\n//\r\n//             while(currentDate < endTime){\r\n//                 let formattedTime = currentDate.toLocaleTimeString([],{hour: '2-digit', minute: '2-digit'});\r\n//                 //ad slot to array\r\n//                 timeSlots.push({\r\n//                     datetime: new Date(currentDate),\r\n//                     time: formattedTime\r\n//                 })\r\n//\r\n//                 //Increment current time by 30 minutes\r\n//                 currentDate.setMinutes(currentDate.getMinutes()+30);\r\n//             }\r\n//\r\n//             setDocSlots(prev =>([...prev,timeSlots]))\r\n//         }\r\n//     }\r\n//\r\n//     useEffect(()=>{\r\n//         fetchDocInfo()\r\n//     },[doctors,docId])\r\n//\r\n//     useEffect(()=>{\r\n//         getAvailableSlots()\r\n//     },[docInfo])\r\n//\r\n//     useEffect(()=>{\r\n//         console.log(docSlots)\r\n//     },[docSlots])\r\n//\r\n//     return docInfo &&(\r\n//         <div>\r\n//             {/*-----Doctor Details----*/}\r\n//             <div className='flex flex-col sm:flex-row gap-4'>\r\n//             <div>\r\n//                 <img className='bg-primary w-full sm:max-w-72 rounded-lg' src={docInfo.image} alt=\"\"/>\r\n//             </div>\r\n//             <div className='flex-1 border border-gray-400 rounded-lg p-8 py-7 bg-white mx-2 sm:mx-0 mt-[-80px] sm:mt-0'>\r\n//                 {/*-----Doc Info: name, degree, experience-----*/}\r\n//                 <p className='flex items-center gap-2 text-2xl font-medium text-gray-900'>{doctor.name}\r\n//                     {docInfo.name}\r\n//                     <img className='w-5' src={assets.verified_icon} alt=\"\"/>\r\n//                 </p>\r\n//                 <div className='flex items-center gap-2 text-sm mt-1 text-gray-600'>\r\n//                     <p>{docInfo.degree} - {docInfo.speciality}</p>\r\n//                     <button className='py-0.5 px-2 border text-xs rounded-full'>{docInfo.experience}</button>\r\n//                 </div>\r\n//                 {/*----Doctor About----*/}\r\n//                 <div>\r\n//                     <p className='flex items-center gap-1 text-sm mt-1 font-medium text-gray-900 mt-3'>\r\n//                         About <img src={assets.info_icon} alt=\"\"/>\r\n//                     </p>\r\n//                     <p className='text-sm text-gray-500 max-w-[700px] mt-1'>{docInfo.about}</p>\r\n//                 </div>\r\n//                 <p className='text-gray-500 font-medium '>\r\n//                     Appointment fee:<span>50.000Ä‘</span>\r\n//                 </p>\r\n//             </div>\r\n//         </div>\r\n//             {/*------Booking slots-----*/}\r\n//             <div className='sm:ml-72 sm:pl-4 mt-4 font-medium text-gray-700'>\r\n//                 <p>Booking slots</p>\r\n//                 <div className='flex gap-3 items-center w-full overflow-x-scroll mt-4'>\r\n//                     {\r\n//                         docSlots.length && docSlots.map((item,index)=>(\r\n//                             <div onClick={()=> setSlotIndex(index)} className={`text-center py-6 min-w-16 rounded-full cursor-pointer ${slotIndex === index ? 'bg-primary text-white' : 'border border-gray-200'}`} key={index}>\r\n//                                 <p>{item[0] && daysOfWeek[item[0].datetime.getDay()]}</p>\r\n//                                 <p>{item[0] && item[0].datetime.getDate()}</p>\r\n//                             </div>\r\n//                         ))\r\n//                     }\r\n//                 </div>\r\n//                 <div className='flex items-center gap-3 w-full overflow-x-scroll mt-4'>\r\n//                     {docSlots.length && docSlots[slotIndex].map((item,index)=>(\r\n//                         <p onClick={()=>setSlotTime(item.time)} className={`text-sm font-light flex-shrink-0 px-5 py-2 rounded-full cursor-pointer ${item.time === slotTime ? 'bg-primary text-white' : 'text-gray-400 border border-gray-300'}`} key={index}>\r\n//                             {item.time.toLowerCase()}\r\n//                         </p>\r\n//                     ))}\r\n//                 </div>\r\n//                 <button className='bg-primary text-white text-sm font-light px-14 py-3 rounded-full my-6'>Book an appointment</button>\r\n//             </div>\r\n//\r\n//             {/*Listing Related Doctors*/}\r\n//             <RelatedDoctors docId={docId} speciality={docInfo.speciality}/>\r\n//\r\n//         </div>\r\n//     )\r\n// }\r\n// export default AppointmentContainer"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}